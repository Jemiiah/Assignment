{
	"compiler": {
		"version": "0.8.24+commit.e11b9ed9"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "name_",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "symbol_",
						"type": "string"
					},
					{
						"internalType": "uint8",
						"name": "decimals_",
						"type": "uint8"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "required",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "available",
						"type": "uint256"
					}
				],
				"name": "InsufficientBalance",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "addr",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "message",
						"type": "string"
					}
				],
				"name": "ZeroAddress",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ZeroValue",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Approval",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Mint",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Transfer",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					}
				],
				"name": "allowance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "approve",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "balance",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "decimals",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "mint",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "name",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "symbol",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "transfer",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "transferfrom",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"errors": {
				"InsufficientBalance(address,uint256,uint256)": [
					{
						"details": "Emitted when an account has insufficient balance."
					}
				],
				"ZeroAddress(address,string)": [
					{
						"details": "Emitted when an address is provided as zero."
					}
				],
				"ZeroValue()": [
					{
						"details": "Emitted when a zero value is encountered."
					}
				]
			},
			"events": {
				"Approval(address,address,uint256)": {
					"details": "Emitted when the allowance of a spender for an owner is set by the owner."
				},
				"Mint(address,uint256)": {
					"details": "Emitted when tokens are minted to `to`."
				},
				"Transfer(address,address,uint256)": {
					"details": "Emitted when tokens are transferred from one account to another."
				}
			},
			"kind": "dev",
			"methods": {
				"allowance(address,address)": {
					"details": "Returns the allowance of one address to another.",
					"params": {
						"owner": "The address which owns the funds.",
						"spender": "The address which will spend the funds."
					}
				},
				"approve(address,uint256)": {
					"details": "Sets `amount` as the allowance of `spender` over the caller's tokens.",
					"params": {
						"amount": "The amount of tokens to allow.",
						"spender": "The address which will spend the funds."
					},
					"returns": {
						"_0": "A boolean value indicating whether the operation succeeded."
					}
				},
				"balanceOf(address)": {
					"details": "Returns the balance of the specified account.",
					"params": {
						"account": "The address of the account to query the balance of."
					}
				},
				"constructor": {
					"details": "Constructs the contract, initializing the name, symbol, and decimals of the token.",
					"params": {
						"decimals_": "The number of decimals used in the token.",
						"name_": "The name of the token.",
						"symbol_": "The symbol of the token."
					}
				},
				"decimals()": {
					"details": "Returns the number of decimals used in the token.",
					"returns": {
						"_0": "The number of decimals used in the token."
					}
				},
				"mint(address,uint256)": {
					"details": "Mints new tokens and adds them to the specified account.",
					"params": {
						"to": "The address of the account to receive the minted tokens.",
						"value": "The amount of tokens to mint."
					}
				},
				"name()": {
					"details": "Returns the name of the token.",
					"returns": {
						"_0": "The name of the token."
					}
				},
				"symbol()": {
					"details": "Returns the symbol of the token.",
					"returns": {
						"_0": "The symbol of the token."
					}
				},
				"totalSupply()": {
					"details": "Returns the total supply of the token.",
					"returns": {
						"_0": "The total supply of the token."
					}
				},
				"transfer(address,uint256)": {
					"details": "Transfers tokens from the sender's account to the specified recipient.",
					"params": {
						"to": "The address of the recipient.",
						"value": "The amount of tokens to transfer."
					},
					"returns": {
						"_0": "A boolean indicating whether the transfer was successful."
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/BasicERC20.sol": "BWCContract"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/BasicERC20.sol": {
			"keccak256": "0x2f6b457b18a82d9b5f19ee7ad8cbc10663841ad96e672349b56cc224d0b46a01",
			"license": "MIT",
			"urls": [
				"bzz-raw://c961bfbcb37cf7b836779e30f7351b24f651fd1fa7d8a48d074e33411a9006d1",
				"dweb:/ipfs/QmauXTvx7k7W2ksnQHEjvDLyg3ZXutBauFA9L7nxRD1NfU"
			]
		}
	},
	"version": 1
}